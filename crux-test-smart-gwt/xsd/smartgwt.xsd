<xs:schema 
xmlns="http://www.cruxframework.org/crux/smartgwt" 
xmlns:xs="http://www.w3.org/2001/XMLSchema" 
xmlns:c="http://www.cruxframework.org/crux" 
xmlns:_gwt="http://www.cruxframework.org/crux/gwt" 
attributeFormDefault="unqualified" 
elementFormDefault="qualified" 
targetNamespace="http://www.cruxframework.org/crux/smartgwt" >
<xs:import schemaLocation="core.xsd" namespace="http://www.cruxframework.org/crux"/>
<xs:import schemaLocation="gwt.xsd" namespace="http://www.cruxframework.org/crux/gwt"/>
<xs:element name="treeGrid" type="TtreeGrid">
</xs:element>
<xs:complexType name="TtreeGrid">
<xs:attribute name="cantDragIntoChildMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="cantDragIntoSelfMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="closedIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="connectorImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="customIconDropProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="customIconOpenProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="customIconProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="dropIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="folderIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="manyItemsImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="nodeIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="offlineNodeMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="openerImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="openIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="parentAlreadyContainsChildMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="selectionProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="treeFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="treeRootValue" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolbar" type="Ttoolbar">
</xs:element>
<xs:complexType name="Ttoolbar">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStripSeparator" type="TtoolStripSeparator">
</xs:element>
<xs:complexType name="TtoolStripSeparator">
<xs:attribute name="hSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="img" type="Timg">
</xs:element>
<xs:complexType name="Timg">
<xs:attribute name="altText" type="xs:string" >
</xs:attribute>
<xs:attribute name="name" type="xs:string" >
</xs:attribute>
<xs:attribute name="prompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="navigationButton" type="TnavigationButton">
</xs:element>
<xs:complexType name="TnavigationButton">
<xs:attribute name="backBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="forwardBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="progressbar" type="Tprogressbar">
</xs:element>
<xs:complexType name="Tprogressbar">
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="searchForm" type="TsearchForm">
</xs:element>
<xs:complexType name="TsearchForm">
<xs:attribute name="canEditFieldAttribute" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="tileGrid" type="TtileGrid">
</xs:element>
<xs:complexType name="TtileGrid">
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="tileConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="tileValueAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="tileValueStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fieldState" type="xs:string" >
</xs:attribute>
<xs:attribute name="fetchOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="updateOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="addOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="duplicateDragMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteState" type="xs:string" >
</xs:attribute>
<xs:attribute name="dragTrackerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="addFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="addSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="edgedCanvas" type="TedgedCanvas">
</xs:element>
<xs:complexType name="TedgedCanvas">
<xs:attribute name="centerBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="detailViewer" type="TdetailViewer">
</xs:element>
<xs:complexType name="TdetailViewer">
<xs:attribute name="blockSeparator" type="xs:string" >
</xs:attribute>
<xs:attribute name="blockStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="cellStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="configureFieldsText" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyCellValue" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyMessageStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fieldIdProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelPrefix" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="linkTextProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="loadingMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="loadingMessageStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="printCellStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="printHeaderStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="printLabelStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="separatorStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fetchOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="updateOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="addOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteState" type="xs:string" >
</xs:attribute>
<xs:attribute name="dragTrackerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="addFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="addSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="tileLayout" type="TtileLayout">
</xs:element>
<xs:complexType name="TtileLayout">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="facetChart" type="TfacetChart">
</xs:element>
<xs:complexType name="TfacetChart">
<xs:attribute name="highErrorMetric" type="xs:string" >
</xs:attribute>
<xs:attribute name="lowErrorMetric" type="xs:string" >
</xs:attribute>
<xs:attribute name="probabilityMetric" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="xAxisMetric" type="xs:string" >
</xs:attribute>
<xs:attribute name="yAxisMetric" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="button" type="Tbutton">
</xs:element>
<xs:complexType name="Tbutton">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="radioGroup" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="colorPicker" type="TcolorPicker">
</xs:element>
<xs:complexType name="TcolorPicker">
<xs:attribute name="basicColorLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="blueFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="blueFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="colorButtonBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="crosshairImageURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="defaultColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="greenFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="greenFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="htmlFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="hueFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="lessButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="lumFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="lumFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="moreButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="okButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="opacitySliderLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="opacityText" type="xs:string" >
</xs:attribute>
<xs:attribute name="redFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="redFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="satFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="satFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="selectedColorLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="swatchImageURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="htmlColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="sectionHeader" type="TsectionHeader">
</xs:element>
<xs:complexType name="TsectionHeader">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="multiGroupDialog" type="TmultiGroupDialog">
</xs:element>
<xs:complexType name="TmultiGroupDialog">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="addLevelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="applyButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="copyLevelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="deleteLevelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupingFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="invalidListPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="levelDownButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="propertyFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="listPropertiesPane" type="TlistPropertiesPane">
</xs:element>
<xs:complexType name="TlistPropertiesPane">
<xs:attribute name="startNumberFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="stretchImgButton" type="TstretchImgButton">
</xs:element>
<xs:complexType name="TstretchImgButton">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelSkinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="radioGroup" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="imgSectionHeader" type="TimgSectionHeader">
</xs:element>
<xs:complexType name="TimgSectionHeader">
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="prompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="rangeSlider" type="TrangeSlider">
</xs:element>
<xs:complexType name="TrangeSlider">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="multiFilePicker" type="TmultiFilePicker">
</xs:element>
<xs:complexType name="TmultiFilePicker">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="splitPane" type="TsplitPane">
</xs:element>
<xs:complexType name="TsplitPane">
<xs:attribute name="detailTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="listTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="navigationTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="dateChooser" type="TdateChooser">
</xs:element>
<xs:complexType name="TdateChooser">
<xs:attribute name="alternateStyleSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="applyButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseBottomButtonStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseButtonStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseFiscalYearStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseNavButtonStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseWeekdayStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseWeekendStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseWeekStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="disabledWeekdayStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="disabledWeekendStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fiscalYearFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fiscalYearHeaderStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="nextYearIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="monthMenuStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="nextMonthIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="nextMonthIconRTL" type="xs:string" >
</xs:attribute>
<xs:attribute name="nextYearIconRTL" type="xs:string" >
</xs:attribute>
<xs:attribute name="prevMonthIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="prevMonthIconRTL" type="xs:string" >
</xs:attribute>
<xs:attribute name="prevYearIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="prevYearIconRTL" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="menu" type="Tmenu">
</xs:element>
<xs:complexType name="Tmenu">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="bodyStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconBodyStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="showAnimationEffect" type="xs:string" >
</xs:attribute>
<xs:attribute name="submenuConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="submenuDirection" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="iconButton" type="TiconButton">
</xs:element>
<xs:complexType name="TiconButton">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="largeIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuIconSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="orientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="canvas" type="Tcanvas">
</xs:element>
<xs:complexType name="Tcanvas">
<xs:attribute name="accessKey" type="xs:string" >
</xs:attribute>
<xs:attribute name="appImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="ariaRole" type="xs:string" >
</xs:attribute>
<xs:attribute name="backgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="backgroundImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="backgroundPosition" type="xs:string" >
</xs:attribute>
<xs:attribute name="border" type="xs:string" >
</xs:attribute>
<xs:attribute name="contents" type="xs:string" >
</xs:attribute>
<xs:attribute name="dataPath" type="xs:string" >
</xs:attribute>
<xs:attribute name="dragType" type="xs:string" >
</xs:attribute>
<xs:attribute name="dropTypes" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeCenterBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="edgeImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupBorderCSS" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupLabelBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupLabelStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
</xs:attribute>
<xs:attribute name="hoverStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="left" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="prompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="resizeBarTarget" type="xs:string" >
</xs:attribute>
<xs:attribute name="scrollbarConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="shadowImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="snapAxis" type="xs:string" >
</xs:attribute>
<xs:attribute name="snapEdge" type="xs:string" >
</xs:attribute>
<xs:attribute name="snapHDirection" type="xs:string" >
</xs:attribute>
<xs:attribute name="snapTo" type="xs:string" >
</xs:attribute>
<xs:attribute name="snapVDirection" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="top" type="xs:string" >
</xs:attribute>
<xs:attribute name="facetId" type="xs:string" >
</xs:attribute>
<xs:attribute name="prefix" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="label" type="Tlabel">
</xs:element>
<xs:complexType name="Tlabel">
<xs:attribute name="contents" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="columnTree" type="TcolumnTree">
</xs:element>
<xs:complexType name="TcolumnTree">
<xs:attribute name="backButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="closedIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="customIconOpenProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="customIconProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="firstColumnTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="folderIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="nodeIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="openIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="dropIconSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="fetchOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="updateOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="addOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="duplicateDragMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="dragTrackerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="addFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editFormulaFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="addSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editSummaryFieldText" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="gridRenderer" type="TgridRenderer">
</xs:element>
<xs:complexType name="TgridRenderer">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="sVG" type="TsVG">
</xs:element>
<xs:complexType name="TsVG">
<xs:attribute name="pluginsPage" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="navigationBar" type="TnavigationBar">
</xs:element>
<xs:complexType name="TnavigationBar">
<xs:attribute name="leftButtonIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="leftButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="rightButtonIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="rightButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="listPropertiesDialog" type="TlistPropertiesDialog">
</xs:element>
<xs:complexType name="TlistPropertiesDialog">
<xs:attribute name="applyButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="recordEditor" type="TrecordEditor">
</xs:element>
<xs:complexType name="TrecordEditor">
<xs:attribute name="actionButtonStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="filterImg" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="simpleTile" type="TsimpleTile">
</xs:element>
<xs:complexType name="TsimpleTile">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="hLayout" type="ThLayout">
</xs:element>
<xs:complexType name="ThLayout">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="window" type="Twindow">
</xs:element>
<xs:complexType name="Twindow">
<xs:attribute name="bodyColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="bodyStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="contentLayout" type="xs:string" >
</xs:attribute>
<xs:attribute name="contentsType" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteBodyColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteHeaderSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="hiliteHeaderStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="modalMaskStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="printBodyStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="printHeaderStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="status" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="vStack" type="TvStack">
</xs:element>
<xs:complexType name="TvStack">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStripButton" type="TtoolStripButton">
</xs:element>
<xs:complexType name="TtoolStripButton">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="richTextEditor" type="TrichTextEditor">
</xs:element>
<xs:complexType name="TrichTextEditor">
<xs:attribute name="toolbarBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="value" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="filterClause" type="TfilterClause">
</xs:element>
<xs:complexType name="TfilterClause">
<xs:attribute name="fieldPickerTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="operatorPickerTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeButtonPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueItemTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStripMenuButton" type="TtoolStripMenuButton">
</xs:element>
<xs:complexType name="TtoolStripMenuButton">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="vLayout" type="TvLayout">
</xs:element>
<xs:complexType name="TvLayout">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="eventWindow" type="TeventWindow">
</xs:element>
<xs:complexType name="TeventWindow">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="portlet" type="Tportlet">
</xs:element>
<xs:complexType name="Tportlet">
<xs:attribute name="closeConfirmationMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="rowHeight" type="xs:string" >
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="snapbar" type="Tsnapbar">
</xs:element>
<xs:complexType name="Tsnapbar">
<xs:attribute name="gripImgSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="slider" type="Tslider">
</xs:element>
<xs:complexType name="Tslider">
<xs:attribute name="hThumbStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="hTrackStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="maxValueLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="thumbSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="trackSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="vThumbStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="vTrackStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="minValueLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStrip" type="TtoolStrip">
</xs:element>
<xs:complexType name="TtoolStrip">
<xs:attribute name="resizeBarClass" type="xs:string" >
</xs:attribute>
<xs:attribute name="separatorClass" type="xs:string" >
</xs:attribute>
<xs:attribute name="verticalStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="advancedHiliteEditor" type="TadvancedHiliteEditor">
</xs:element>
<xs:complexType name="TadvancedHiliteEditor">
<xs:attribute name="appearanceGroupTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="callback" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="filterGroupTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="invalidHilitePrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="saveButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="targetFieldsItemTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="viewLoader" type="TviewLoader">
</xs:element>
<xs:complexType name="TviewLoader">
<xs:attribute name="httpMethod" type="xs:string" >
</xs:attribute>
<xs:attribute name="loadingMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="viewURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="batchUploader" type="TbatchUploader">
</xs:element>
<xs:complexType name="TbatchUploader">
<xs:attribute name="cancelConfirmMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="commitConfirmationMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="dataURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="defaultDelimiter" type="xs:string" >
</xs:attribute>
<xs:attribute name="defaultQuoteString" type="xs:string" >
</xs:attribute>
<xs:attribute name="partialCommitError" type="xs:string" >
</xs:attribute>
<xs:attribute name="partialCommitPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="uploadButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="uploadFieldPrefix" type="xs:string" >
</xs:attribute>
<xs:attribute name="uploadFileLabel" type="xs:string" >
</xs:attribute>
<xs:attribute name="uploadOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="timeline" type="Ttimeline">
</xs:element>
<xs:complexType name="Ttimeline">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="cubeGrid" type="TcubeGrid">
</xs:element>
<xs:complexType name="TcubeGrid">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="bodyStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="cellIdProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="chartConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="colHeaderBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="facetLabelHoverStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="facetValueHoverStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="innerHeaderBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="metricFacetId" type="xs:string" >
</xs:attribute>
<xs:attribute name="rollupValue" type="xs:string" >
</xs:attribute>
<xs:attribute name="rowHeaderBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStripResizer" type="TtoolStripResizer">
</xs:element>
<xs:complexType name="TtoolStripResizer">
<xs:attribute name="hSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="hStack" type="ThStack">
</xs:element>
<xs:complexType name="ThStack">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="filterBuilder" type="TfilterBuilder">
</xs:element>
<xs:complexType name="TfilterBuilder">
<xs:attribute name="addButtonPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="fieldPickerTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="fieldPickerWidth" type="xs:string" >
</xs:attribute>
<xs:attribute name="inlineAndNotTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="inlineAndTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="inlineOrTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="matchAllTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="matchAnyTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="matchNoneTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="missingFieldPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="modeSwitcherAdvancedMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="modeSwitcherFlattenWarningMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="modeSwitcherSimpleMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="operatorPickerTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="operatorPickerWidth" type="xs:string" >
</xs:attribute>
<xs:attribute name="radioOperatorTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="rangeSeparator" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeButtonPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="subClauseButtonPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="subClauseButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="topOperatorItemWidth" type="xs:string" >
</xs:attribute>
<xs:attribute name="topOperatorTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="valueItemWidth" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="printCanvas" type="TprintCanvas">
</xs:element>
<xs:complexType name="TprintCanvas">
<xs:attribute name="externalStylesheet" type="xs:string" >
</xs:attribute>
<xs:attribute name="printFrameURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="splitbar" type="Tsplitbar">
</xs:element>
<xs:complexType name="Tsplitbar">
<xs:attribute name="gripImgSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="fieldPickerWindow" type="TfieldPickerWindow">
</xs:element>
<xs:complexType name="TfieldPickerWindow">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="scrollbar" type="Tscrollbar">
</xs:element>
<xs:complexType name="Tscrollbar">
<xs:attribute name="cornerSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="hSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="dateGrid" type="TdateGrid">
</xs:element>
<xs:complexType name="TdateGrid">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="imgButton" type="TimgButton">
</xs:element>
<xs:complexType name="TimgButton">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconAlign" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="radioGroup" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="iButton" type="TiButton">
</xs:element>
<xs:complexType name="TiButton">
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="layout" type="Tlayout">
</xs:element>
<xs:complexType name="Tlayout">
<xs:attribute name="resizeBarClass" type="xs:string" >
</xs:attribute>
<xs:attribute name="stackZIndex" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="tabSet" type="TtabSet">
</xs:element>
<xs:complexType name="TtabSet">
<xs:attribute name="closeTabIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="locateTabsBy" type="xs:string" >
</xs:attribute>
<xs:attribute name="moreTabImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="moreTabTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="paneContainerClassName" type="xs:string" >
</xs:attribute>
<xs:attribute name="pickerButtonHSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="pickerButtonSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="pickerButtonVSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="scrollerHSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="scrollerSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="scrollerVSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="simpleTabBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="propertySheet" type="TpropertySheet">
</xs:element>
<xs:complexType name="TpropertySheet">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="applet" type="Tapplet">
</xs:element>
<xs:complexType name="Tapplet">
<xs:attribute name="alt" type="xs:string" >
</xs:attribute>
<xs:attribute name="altHTML" type="xs:string" >
</xs:attribute>
<xs:attribute name="archive" type="xs:string" >
</xs:attribute>
<xs:attribute name="classID" type="xs:string" >
</xs:attribute>
<xs:attribute name="code" type="xs:string" >
</xs:attribute>
<xs:attribute name="codeBase" type="xs:string" >
</xs:attribute>
<xs:attribute name="name" type="xs:string" >
</xs:attribute>
<xs:attribute name="objectCodeBase" type="xs:string" >
</xs:attribute>
<xs:attribute name="pluginID" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="useTag" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="portalLayout" type="TportalLayout">
</xs:element>
<xs:complexType name="TportalLayout">
<xs:attribute name="columnBorder" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="stretchImg" type="TstretchImg">
</xs:element>
<xs:complexType name="TstretchImg">
<xs:attribute name="gripImgSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="hSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="itemBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="hiliteEditor" type="ThiliteEditor">
</xs:element>
<xs:complexType name="ThiliteEditor">
<xs:attribute name="addAdvancedRuleButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="availableFieldsColumnTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="callback" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="saveButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="statefulCanvas" type="TstatefulCanvas">
</xs:element>
<xs:complexType name="TstatefulCanvas">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconOrientation" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="overCanvasConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="radioGroup" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="dialog" type="Tdialog">
</xs:element>
<xs:complexType name="Tdialog">
<xs:attribute name="icon" type="xs:string" >
</xs:attribute>
<xs:attribute name="message" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="messageStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="toolStripGroup" type="TtoolStripGroup">
</xs:element>
<xs:complexType name="TtoolStripGroup">
<xs:attribute name="bodyConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelConstructor" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="imgSplitbar" type="TimgSplitbar">
</xs:element>
<xs:complexType name="TimgSplitbar">
<xs:attribute name="hSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="vSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="calendar" type="Tcalendar">
</xs:element>
<xs:complexType name="Tcalendar">
<xs:attribute name="addEventButtonHoverText" type="xs:string" >
</xs:attribute>
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="canDragEventField" type="xs:string" >
</xs:attribute>
<xs:attribute name="canEditField" type="xs:string" >
</xs:attribute>
<xs:attribute name="canRemoveField" type="xs:string" >
</xs:attribute>
<xs:attribute name="datePickerHoverText" type="xs:string" >
</xs:attribute>
<xs:attribute name="dayBodyBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="dayHeaderBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="dayViewTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="descriptionField" type="xs:string" >
</xs:attribute>
<xs:attribute name="detailsButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="endDateField" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventDescriptionFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventEndDateFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventLaneFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventNameFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventStartDateFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventWindowStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="eventWindowStyleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="laneNameField" type="xs:string" >
</xs:attribute>
<xs:attribute name="leadingDateField" type="xs:string" >
</xs:attribute>
<xs:attribute name="monthViewTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="nameField" type="xs:string" >
</xs:attribute>
<xs:attribute name="nextButtonHoverText" type="xs:string" >
</xs:attribute>
<xs:attribute name="previousButtonHoverText" type="xs:string" >
</xs:attribute>
<xs:attribute name="saveButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="selectedCellStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="startDateField" type="xs:string" >
</xs:attribute>
<xs:attribute name="timelineViewTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="todayBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="trailingDateField" type="xs:string" >
</xs:attribute>
<xs:attribute name="weekPrefix" type="xs:string" >
</xs:attribute>
<xs:attribute name="weekViewTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="workdayBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="workdayEnd" type="xs:string" >
</xs:attribute>
<xs:attribute name="workdayStart" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="menuBar" type="TmenuBar">
</xs:element>
<xs:complexType name="TmenuBar">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="HTMLPane" type="THTMLPane">
</xs:element>
<xs:complexType name="THTMLPane">
<xs:attribute name="iFrameURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="ribbonGroup" type="TribbonGroup">
</xs:element>
<xs:complexType name="TribbonGroup">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="tabBar" type="TtabBar">
</xs:element>
<xs:complexType name="TtabBar">
<xs:attribute name="baseLineSrc" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="ribbonBar" type="TribbonBar">
</xs:element>
<xs:complexType name="TribbonBar">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="activeXControl" type="TactiveXControl">
</xs:element>
<xs:complexType name="TactiveXControl">
<xs:attribute name="classID" type="xs:string" >
</xs:attribute>
<xs:attribute name="codeBase" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" >
</xs:attribute>
<xs:attribute name="uuid" type="xs:string" >
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="sectionStack" type="TsectionStack">
</xs:element>
<xs:complexType name="TsectionStack">
<xs:attribute name="sectionHeaderClass" type="xs:string" >
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="hiliteRule" type="ThiliteRule">
</xs:element>
<xs:complexType name="ThiliteRule">
<xs:attribute name="backgroundColorTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="colorFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="foregroundColorTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconFieldTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="removeButtonPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="HTMLFlow" type="THTMLFlow">
</xs:element>
<xs:complexType name="THTMLFlow">
<xs:attribute name="contents" type="xs:string" >
</xs:attribute>
<xs:attribute name="contentsURL" type="xs:string" >
</xs:attribute>
<xs:attribute name="loadingMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="flashlet" type="Tflashlet">
</xs:element>
<xs:complexType name="Tflashlet">
<xs:attribute name="classID" type="xs:string" >
</xs:attribute>
<xs:attribute name="codeBase" type="xs:string" >
</xs:attribute>
<xs:attribute name="name" type="xs:string" >
</xs:attribute>
<xs:attribute name="pluginsPage" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="browserPlugin" type="TbrowserPlugin">
</xs:element>
<xs:complexType name="TbrowserPlugin">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="dateRangeDialog" type="TdateRangeDialog">
</xs:element>
<xs:complexType name="TdateRangeDialog">
<xs:attribute name="cancelButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="clearButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="okButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="printWindow" type="TprintWindow">
</xs:element>
<xs:complexType name="TprintWindow">
<xs:attribute name="externalStylesheet" type="xs:string" >
</xs:attribute>
<xs:attribute name="printButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="tableView" type="TtableView">
</xs:element>
<xs:complexType name="TtableView">
<xs:attribute name="dataField" type="xs:string" >
</xs:attribute>
<xs:attribute name="descriptionField" type="xs:string" >
</xs:attribute>
<xs:attribute name="iconField" type="xs:string" >
</xs:attribute>
<xs:attribute name="infoField" type="xs:string" >
</xs:attribute>
<xs:attribute name="navIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="recordDataStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="recordDescriptionStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="recordInfoStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="recordNavigationProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="recordTitleStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="wholeRecordNavIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="flowLayout" type="TflowLayout">
</xs:element>
<xs:complexType name="TflowLayout">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="treeMenuButton" type="TtreeMenuButton">
</xs:element>
<xs:complexType name="TtreeMenuButton">
<xs:attribute name="emptyMenuMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="pathSeparatorString" type="xs:string" >
</xs:attribute>
<xs:attribute name="selectedBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="unselectedTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="menuButton" type="TmenuButton">
</xs:element>
<xs:complexType name="TmenuButton">
<xs:attribute name="menuAnimationEffect" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuButtonImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuButtonImageUp" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="imgTab" type="TimgTab">
</xs:element>
<xs:complexType name="TimgTab">
<xs:attribute name="baseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="labelSkinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="skinImgDir" type="xs:string" >
</xs:attribute>
<xs:attribute name="src" type="xs:string" >
</xs:attribute>
<xs:attribute name="titleStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="iMenuButton" type="TiMenuButton">
</xs:element>
<xs:complexType name="TiMenuButton">
<xs:attribute name="menuAnimationEffect" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuButtonImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="menuButtonImageUp" type="xs:string" >
</xs:attribute>
<xs:attribute name="title" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="layoutSpacer" type="TlayoutSpacer">
</xs:element>
<xs:complexType name="TlayoutSpacer">
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="listGrid" type="TlistGrid">
</xs:element>
<xs:complexType name="TlistGrid">
<xs:attribute name="bodyBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="bodyStyleName" type="xs:string" >
</xs:attribute>
<xs:attribute name="booleanBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="booleanFalseImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="booleanTrueImage" type="xs:string" >
</xs:attribute>
<xs:attribute name="cancelEditingConfirmationMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="canEditFieldAttribute" type="xs:string" >
</xs:attribute>
<xs:attribute name="dateInputFormat" type="xs:string" >
</xs:attribute>
<xs:attribute name="detailField" type="xs:string" >
</xs:attribute>
<xs:attribute name="discardEditsSaveButtonTitle" type="xs:string" >
</xs:attribute>
<xs:attribute name="editFailedBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="editFailedCSSText" type="xs:string" >
</xs:attribute>
<xs:attribute name="editPendingBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="editPendingCSSText" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyCellValue" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="emptyMessageStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="expansionEditorSaveDialogPrompt" type="xs:string" >
</xs:attribute>
<xs:attribute name="gridSummaryRecordProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupByField" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupByText" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupIcon" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupNodeBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupNodeStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupState" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupSummaryRecordProperty" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupSummaryStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="groupTitleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerBackgroundColor" type="xs:string" >
</xs:attribute>
<xs:attribute name="headerBaseStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="dynamicForm" type="TdynamicForm">
</xs:element>
<xs:complexType name="TdynamicForm">
<xs:attribute name="Action" type="xs:string" >
</xs:attribute>
<xs:attribute name="TitleField" type="xs:string" >
</xs:attribute>
<xs:attribute name="CancelParamName" type="xs:string" >
</xs:attribute>
<xs:attribute name="CancelParamValue" type="xs:string" >
</xs:attribute>
<xs:attribute name="CanEditFieldAttribute" type="xs:string" >
</xs:attribute>
<xs:attribute name="ErrorItemCellStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="ErrorsPreamble" type="xs:string" >
</xs:attribute>
<xs:attribute name="FormSubmitFailedWarning" type="xs:string" >
</xs:attribute>
<xs:attribute name="ItemHoverStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="ReadOnlyTextBoxStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="Target" type="xs:string" >
</xs:attribute>
<xs:attribute name="TitlePrefix" type="xs:string" >
</xs:attribute>
<xs:attribute name="TitleSuffix" type="xs:string" >
</xs:attribute>
<xs:attribute name="UnknownErrorMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="DuplicateDragMessage" type="xs:string" >
</xs:attribute>
<xs:attribute name="FetchOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="UpdateOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="AddOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="RemoveOperation" type="xs:string" >
</xs:attribute>
<xs:attribute name="DragTrackerStyle" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:element name="iconMenuButton" type="TiconMenuButton">
</xs:element>
<xs:complexType name="TiconMenuButton">
<xs:attribute name="menuAnimationEffect" type="xs:string" >
</xs:attribute>
<xs:attribute name="id" type="xs:string" use="required" >
<xs:annotation>
<xs:documentation>Sets the identifier used to reference this widget on the crux view. </xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="width" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s width, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This width does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="height" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the object&apos;s height, in CSS units (e.g. &quot;10px&quot;, &quot;1em&quot;). This height does not include decorations such as border, margin, and padding.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="styleName" type="xs:string" >
<xs:annotation>
<xs:documentation>Clears all of the element&apos;s style names and sets it to the given style.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="visible" type="xs:boolean" >
<xs:annotation>
<xs:documentation>Sets whether this object is visible. true to show the object, false to hide it</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="tooltip" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML title property associated with this object. The title is the &apos;tool-tip&apos; displayed to users when they hover over the object.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="style" type="xs:string" >
<xs:annotation>
<xs:documentation>Sets the HTML style property of the widget&apos;s element</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="viewPermission" type="xs:string" >
<xs:annotation>
<xs:documentation>A role that must be checked to verify if user can see this widget on the Screen. You must define a RoleManager to handle these permission validations.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onLoadWidget" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired when the widget is loaded into its parent view.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onAttach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is attached to the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="onDettach" >
<xs:annotation>
<xs:documentation>Inform the handler for onLoadWidget event. This event is fired every time the widget is removed from the DOM in the browser.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:schema>
